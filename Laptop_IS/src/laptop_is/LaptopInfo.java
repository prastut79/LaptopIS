package laptop_is;


/**
 *
 * @author Zer0
 */
import java.awt.Color;
import javax.swing.table.DefaultTableCellRenderer;
import java.util.Hashtable;
import javax.swing.JFileChooser;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import java.io.FileReader;
import java.io.FileWriter;
import com.opencsv.CSVReader;
import com.opencsv.CSVWriter;
import com.opencsv.exceptions.CsvValidationException;
import java.awt.Desktop;

import java.awt.HeadlessException;

import java.io.FileNotFoundException;
import java.io.IOException;

import java.util.Arrays;



/*
Laptop Inventory System
A class that creates a system to store laptop information.
*/

public class LaptopInfo extends java.awt.Frame{
    
    int toEditRow;
    String ActivePage = "AddProduct";
    String selectedPath;
    String csvPath;
    boolean fileSaved = true;
    boolean csvOpened = false;
    /**
     * Creates new form NewFrame
     */
    public LaptopInfo() {
        initComponents();
    }
    

    
    
    
    //--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x--x
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        apbtngrpCategory = new javax.swing.ButtonGroup();
        jpnlBg = new javax.swing.JPanel();
        jpnlSideBar = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jpnlProductsNav = new javax.swing.JPanel();
        jpnlProductsNavActive = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jpnlAddProductNav = new javax.swing.JPanel();
        jpnlAddProductNavActive = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jpnlSearchNav = new javax.swing.JPanel();
        jpnlSearchNavActive = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jpnlMain = new javax.swing.JPanel();
        jpnlAddProduct = new javax.swing.JPanel();
        aplblTitle = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        aptfLaptopModel = new javax.swing.JTextField();
        aptfLaptopName = new javax.swing.JTextField();
        apspLaptopPrice = new javax.swing.JSpinner();
        apcbLaptopManufacturer = new javax.swing.JComboBox<>();
        aplblValidateLaptopModel = new javax.swing.JLabel();
        aplblValidateLaptopName = new javax.swing.JLabel();
        aplblValidateLaptopManufacturer = new javax.swing.JLabel();
        aplblValidateLaptopPrice = new javax.swing.JLabel();
        aplblValidateLaptopSize = new javax.swing.JLabel();
        apcbLaptopSize = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        aplblLaptopNumber = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jcColorBlack = new javax.swing.JCheckBox();
        jcColorBlue = new javax.swing.JCheckBox();
        jcColorRed = new javax.swing.JCheckBox();
        jcColorWhite = new javax.swing.JCheckBox();
        jcColorGrey = new javax.swing.JCheckBox();
        aplblValidateLaptopColor = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        apsdLaptopRange = new javax.swing.JSlider();
        aptfRange = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jrbNotebook = new javax.swing.JRadioButton();
        jrbChromebook = new javax.swing.JRadioButton();
        jrbConvertible = new javax.swing.JRadioButton();
        jrbMacbook = new javax.swing.JRadioButton();
        jrbUltrabook = new javax.swing.JRadioButton();
        aplblValidateLaptopCategory = new javax.swing.JLabel();
        jrbClassic = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        appnlbuttons = new javax.swing.JPanel();
        apbtnClear = new javax.swing.JButton();
        apbtnAdd = new javax.swing.JButton();
        edpnlButtons = new javax.swing.JPanel();
        edbtnCancel = new javax.swing.JButton();
        edbtnSave = new javax.swing.JButton();
        jpnlProducts = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        pdjtProductDetails = new javax.swing.JTable();
        pdjbDelete = new javax.swing.JButton();
        pdjbEdit = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        pdlblProductCount = new javax.swing.JLabel();
        jpnlSearch = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        psbtnRange = new javax.swing.JButton();
        pscbLaptopRange = new javax.swing.JComboBox<>();
        pslblValidateLaptopRange = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        psbtnCategory = new javax.swing.JButton();
        pscbLaptopCategory = new javax.swing.JComboBox<>();
        pslblValidateLaptopCategory = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        psbtnPrice = new javax.swing.JButton();
        pslblValidateLaptopPrice = new javax.swing.JLabel();
        psspLaptopPrice = new javax.swing.JSpinner();
        jSeparator5 = new javax.swing.JSeparator();
        pslblProductFound = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        psjtProductSearch = new javax.swing.JTable();
        menuBar1 = new java.awt.MenuBar();
        menuFile = new java.awt.Menu();
        mitemOpen = new java.awt.MenuItem();
        mitemSave = new java.awt.MenuItem();
        mitemSaveAs = new java.awt.MenuItem();
        mItemExit = new java.awt.MenuItem();
        menuView = new java.awt.Menu();
        mItemAddProduct = new java.awt.MenuItem();
        mItemProducts = new java.awt.MenuItem();
        mItemSearch = new java.awt.MenuItem();
        menuHelp = new java.awt.Menu();
        mItemAbout = new java.awt.MenuItem();

        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Laptop Information System");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jpnlBg.setBackground(new java.awt.Color(255, 255, 255));

        jpnlSideBar.setBackground(new java.awt.Color(23, 35, 51));
        jpnlSideBar.setForeground(new java.awt.Color(255, 255, 255));
        jpnlSideBar.setPreferredSize(new java.awt.Dimension(266, 278));

        jSeparator1.setBackground(new java.awt.Color(213, 254, 254));
        jSeparator1.setForeground(new java.awt.Color(213, 254, 254));
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 35)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(214, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Laptop IS  ");
        jLabel3.setToolTipText("");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setIconTextGap(1);
        jLabel3.setRequestFocusEnabled(false);

        jpnlProductsNav.setBackground(new java.awt.Color(23, 35, 51));
        jpnlProductsNav.setForeground(new java.awt.Color(214, 255, 255));
        jpnlProductsNav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jpnlProductsNav.setPreferredSize(new java.awt.Dimension(255, 58));
        jpnlProductsNav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                navMouseClicked(evt);
            }
        });

        jpnlProductsNavActive.setBackground(new java.awt.Color(23, 35, 51));
        jpnlProductsNavActive.setPreferredSize(new java.awt.Dimension(5, 0));

        javax.swing.GroupLayout jpnlProductsNavActiveLayout = new javax.swing.GroupLayout(jpnlProductsNavActive);
        jpnlProductsNavActive.setLayout(jpnlProductsNavActiveLayout);
        jpnlProductsNavActiveLayout.setHorizontalGroup(
            jpnlProductsNavActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        jpnlProductsNavActiveLayout.setVerticalGroup(
            jpnlProductsNavActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laptop_is/images/iconProducts.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(214, 255, 255));
        jLabel4.setText("Products");

        javax.swing.GroupLayout jpnlProductsNavLayout = new javax.swing.GroupLayout(jpnlProductsNav);
        jpnlProductsNav.setLayout(jpnlProductsNavLayout);
        jpnlProductsNavLayout.setHorizontalGroup(
            jpnlProductsNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProductsNavLayout.createSequentialGroup()
                .addComponent(jpnlProductsNavActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnlProductsNavLayout.setVerticalGroup(
            jpnlProductsNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProductsNavLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpnlProductsNavLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
            .addComponent(jpnlProductsNavActive, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        jpnlAddProductNav.setBackground(new java.awt.Color(41, 57, 80));
        jpnlAddProductNav.setForeground(new java.awt.Color(214, 255, 255));
        jpnlAddProductNav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jpnlAddProductNav.setPreferredSize(new java.awt.Dimension(255, 58));
        jpnlAddProductNav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                navMouseClicked(evt);
            }
        });

        jpnlAddProductNavActive.setBackground(new java.awt.Color(214, 255, 255));
        jpnlAddProductNavActive.setPreferredSize(new java.awt.Dimension(5, 0));

        javax.swing.GroupLayout jpnlAddProductNavActiveLayout = new javax.swing.GroupLayout(jpnlAddProductNavActive);
        jpnlAddProductNavActive.setLayout(jpnlAddProductNavActiveLayout);
        jpnlAddProductNavActiveLayout.setHorizontalGroup(
            jpnlAddProductNavActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        jpnlAddProductNavActiveLayout.setVerticalGroup(
            jpnlAddProductNavActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laptop_is/images/iconAddProducts.png"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(214, 255, 255));
        jLabel5.setText("Add Product");

        javax.swing.GroupLayout jpnlAddProductNavLayout = new javax.swing.GroupLayout(jpnlAddProductNav);
        jpnlAddProductNav.setLayout(jpnlAddProductNavLayout);
        jpnlAddProductNavLayout.setHorizontalGroup(
            jpnlAddProductNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlAddProductNavLayout.createSequentialGroup()
                .addComponent(jpnlAddProductNavActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jpnlAddProductNavLayout.setVerticalGroup(
            jpnlAddProductNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlAddProductNavLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpnlAddProductNavLayout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
            .addComponent(jpnlAddProductNavActive, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        jpnlSearchNav.setBackground(new java.awt.Color(23, 35, 51));
        jpnlSearchNav.setForeground(new java.awt.Color(214, 255, 255));
        jpnlSearchNav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jpnlSearchNav.setPreferredSize(new java.awt.Dimension(255, 58));
        jpnlSearchNav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                navMouseClicked(evt);
            }
        });

        jpnlSearchNavActive.setBackground(new java.awt.Color(23, 35, 51));
        jpnlSearchNavActive.setPreferredSize(new java.awt.Dimension(5, 0));

        javax.swing.GroupLayout jpnlSearchNavActiveLayout = new javax.swing.GroupLayout(jpnlSearchNavActive);
        jpnlSearchNavActive.setLayout(jpnlSearchNavActiveLayout);
        jpnlSearchNavActiveLayout.setHorizontalGroup(
            jpnlSearchNavActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        jpnlSearchNavActiveLayout.setVerticalGroup(
            jpnlSearchNavActiveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/laptop_is/images/iconSearch.png"))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(214, 255, 255));
        jLabel18.setText("Search");

        javax.swing.GroupLayout jpnlSearchNavLayout = new javax.swing.GroupLayout(jpnlSearchNav);
        jpnlSearchNav.setLayout(jpnlSearchNavLayout);
        jpnlSearchNavLayout.setHorizontalGroup(
            jpnlSearchNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlSearchNavLayout.createSequentialGroup()
                .addComponent(jpnlSearchNavActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnlSearchNavLayout.setVerticalGroup(
            jpnlSearchNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlSearchNavLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpnlSearchNavLayout.createSequentialGroup()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
            .addComponent(jpnlSearchNavActive, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jpnlSideBarLayout = new javax.swing.GroupLayout(jpnlSideBar);
        jpnlSideBar.setLayout(jpnlSideBarLayout);
        jpnlSideBarLayout.setHorizontalGroup(
            jpnlSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlProductsNav, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
            .addComponent(jpnlAddProductNav, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
            .addGroup(jpnlSideBarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jpnlSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(30, Short.MAX_VALUE))
            .addComponent(jpnlSearchNav, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
        );
        jpnlSideBarLayout.setVerticalGroup(
            jpnlSideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlSideBarLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jpnlAddProductNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlProductsNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnlSearchNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnlMain.setBackground(new java.awt.Color(153, 255, 153));
        jpnlMain.setPreferredSize(new java.awt.Dimension(724, 565));
        jpnlMain.setLayout(new java.awt.CardLayout());

        jpnlAddProduct.setBackground(new java.awt.Color(255, 255, 255));
        jpnlAddProduct.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        aplblTitle.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        aplblTitle.setText("Add Product");
        jpnlAddProduct.add(aplblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 26, -1, -1));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(213, 254, 254));
        jSeparator2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jSeparator2.setPreferredSize(new java.awt.Dimension(50, 100000));
        jpnlAddProduct.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, 91, 14));

        jPanel5.setOpaque(false);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(23, 35, 51));
        jLabel8.setText("Model Number");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(23, 35, 51));
        jLabel7.setText("Laptop Name");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(23, 35, 51));
        jLabel10.setText("Size");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(23, 35, 51));
        jLabel12.setText("Manufacturer");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(23, 35, 51));
        jLabel13.setText("Price");

        aptfLaptopModel.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        aptfLaptopModel.setForeground(new java.awt.Color(23, 35, 51));

        aptfLaptopName.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        aptfLaptopName.setForeground(new java.awt.Color(23, 35, 51));
        aptfLaptopName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                aptfLaptopNameKeyPressed(evt);
            }
        });

        apspLaptopPrice.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        apspLaptopPrice.setModel(new javax.swing.SpinnerNumberModel(0, null, null, 100));
        apspLaptopPrice.setEditor(new javax.swing.JSpinner.NumberEditor(apspLaptopPrice, "0"));

        apcbLaptopManufacturer.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        apcbLaptopManufacturer.setForeground(new java.awt.Color(23, 35, 51));
        apcbLaptopManufacturer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--SELECT--", "MSI", "Acer", "ROG", "Apple", "Dell" }));
        apcbLaptopManufacturer.setOpaque(false);

        aplblValidateLaptopModel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        aplblValidateLaptopModel.setForeground(new java.awt.Color(255, 0, 0));
        aplblValidateLaptopModel.setText(" ");

        aplblValidateLaptopName.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        aplblValidateLaptopName.setForeground(new java.awt.Color(255, 0, 0));
        aplblValidateLaptopName.setText(" ");

        aplblValidateLaptopManufacturer.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        aplblValidateLaptopManufacturer.setForeground(new java.awt.Color(255, 0, 0));
        aplblValidateLaptopManufacturer.setText(" ");

        aplblValidateLaptopPrice.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        aplblValidateLaptopPrice.setForeground(new java.awt.Color(255, 0, 0));
        aplblValidateLaptopPrice.setText(" ");

        aplblValidateLaptopSize.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        aplblValidateLaptopSize.setForeground(new java.awt.Color(255, 0, 0));
        aplblValidateLaptopSize.setText(" ");

        apcbLaptopSize.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        apcbLaptopSize.setForeground(new java.awt.Color(23, 35, 51));
        apcbLaptopSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--SELECT--", "13\"", "14\"", "15\"", "16\"", "17\"", "18\"" }));
        apcbLaptopSize.setOpaque(false);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(23, 35, 51));
        jLabel16.setText("Laptop ID");

        aplblLaptopNumber.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        aplblLaptopNumber.setForeground(new java.awt.Color(23, 35, 51));
        aplblLaptopNumber.setText("101");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(aplblLaptopNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel8)
                .addGap(20, 20, 20)
                .addComponent(aptfLaptopModel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(aplblValidateLaptopModel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(aptfLaptopName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(aplblValidateLaptopName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(apcbLaptopSize, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(aplblValidateLaptopSize, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(apcbLaptopManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(aplblValidateLaptopManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(apspLaptopPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(aplblValidateLaptopPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aplblLaptopNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aptfLaptopModel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(aplblValidateLaptopModel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aptfLaptopName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(aplblValidateLaptopName)
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apcbLaptopSize, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(aplblValidateLaptopSize)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apcbLaptopManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(aplblValidateLaptopManufacturer)
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apspLaptopPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aplblValidateLaptopPrice)
                .addGap(17, 17, 17))
        );

        jpnlAddProduct.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 105, 350, 440));

        jPanel7.setOpaque(false);
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(23, 35, 51));
        jLabel9.setText("Available Colors");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 34));

        jcColorBlack.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jcColorBlack.setForeground(new java.awt.Color(23, 35, 51));
        jcColorBlack.setText("Black");
        jcColorBlack.setOpaque(false);
        jPanel7.add(jcColorBlack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 88, -1));

        jcColorBlue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jcColorBlue.setForeground(new java.awt.Color(23, 35, 51));
        jcColorBlue.setText("Blue");
        jcColorBlue.setActionCommand("White");
        jcColorBlue.setOpaque(false);
        jPanel7.add(jcColorBlue, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 120, 72, -1));

        jcColorRed.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jcColorRed.setForeground(new java.awt.Color(23, 35, 51));
        jcColorRed.setText("Red");
        jcColorRed.setActionCommand("White");
        jcColorRed.setOpaque(false);
        jPanel7.add(jcColorRed, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 90, -1));

        jcColorWhite.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jcColorWhite.setForeground(new java.awt.Color(23, 35, 51));
        jcColorWhite.setText("White");
        jcColorWhite.setOpaque(false);
        jPanel7.add(jcColorWhite, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 153, 88, -1));

        jcColorGrey.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jcColorGrey.setForeground(new java.awt.Color(23, 35, 51));
        jcColorGrey.setText("Grey");
        jcColorGrey.setActionCommand("White");
        jcColorGrey.setOpaque(false);
        jPanel7.add(jcColorGrey, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 153, 90, -1));

        aplblValidateLaptopColor.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        aplblValidateLaptopColor.setForeground(new java.awt.Color(255, 0, 0));
        aplblValidateLaptopColor.setText(" ");
        jPanel7.add(aplblValidateLaptopColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 93, 116, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(23, 35, 51));
        jLabel14.setText("Range");
        jPanel7.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 68, 34));

        apsdLaptopRange.setForeground(new java.awt.Color(23, 35, 51));
        apsdLaptopRange.setMajorTickSpacing(1);
        apsdLaptopRange.setMaximum(2);
        apsdLaptopRange.setMinorTickSpacing(1);
        apsdLaptopRange.setValue(0);
        apsdLaptopRange.setOpaque(false);
        apsdLaptopRange.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                apsdLaptopRangeStateChanged(evt);
            }
        });
        jPanel7.add(apsdLaptopRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 14, 166, -1));

        aptfRange.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        aptfRange.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aptfRange.setText("Low");
        jPanel7.add(aptfRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 42, 166, -1));

        jpnlAddProduct.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, -1, -1));

        jPanel8.setOpaque(false);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(23, 35, 51));
        jLabel11.setText("Category");

        apbtngrpCategory.add(jrbNotebook);
        jrbNotebook.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jrbNotebook.setForeground(new java.awt.Color(23, 35, 51));
        jrbNotebook.setText("Notebook");
        jrbNotebook.setActionCommand("Notebook");
        jrbNotebook.setOpaque(false);

        apbtngrpCategory.add(jrbChromebook);
        jrbChromebook.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jrbChromebook.setForeground(new java.awt.Color(23, 35, 51));
        jrbChromebook.setText("Chromebook");
        jrbChromebook.setActionCommand("Chromebook");
        jrbChromebook.setOpaque(false);

        apbtngrpCategory.add(jrbConvertible);
        jrbConvertible.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jrbConvertible.setForeground(new java.awt.Color(23, 35, 51));
        jrbConvertible.setText("Convertible");
        jrbConvertible.setToolTipText("");
        jrbConvertible.setActionCommand("Convertible");
        jrbConvertible.setOpaque(false);

        apbtngrpCategory.add(jrbMacbook);
        jrbMacbook.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jrbMacbook.setForeground(new java.awt.Color(23, 35, 51));
        jrbMacbook.setText("Macbook");
        jrbMacbook.setActionCommand("Macbook");
        jrbMacbook.setOpaque(false);

        apbtngrpCategory.add(jrbUltrabook);
        jrbUltrabook.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jrbUltrabook.setForeground(new java.awt.Color(23, 35, 51));
        jrbUltrabook.setText("Ultrabook");
        jrbUltrabook.setActionCommand("Ultrabook");
        jrbUltrabook.setOpaque(false);

        aplblValidateLaptopCategory.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        aplblValidateLaptopCategory.setForeground(new java.awt.Color(255, 0, 0));
        aplblValidateLaptopCategory.setText(" ");

        apbtngrpCategory.add(jrbClassic);
        jrbClassic.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jrbClassic.setForeground(new java.awt.Color(23, 35, 51));
        jrbClassic.setText("Classic");
        jrbClassic.setActionCommand("Classic");
        jrbClassic.setOpaque(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aplblValidateLaptopCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jrbConvertible, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jrbUltrabook)
                            .addComponent(jrbNotebook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jrbChromebook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jrbClassic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jrbMacbook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aplblValidateLaptopCategory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbNotebook)
                    .addComponent(jrbChromebook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbConvertible)
                    .addComponent(jrbMacbook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbUltrabook)
                    .addComponent(jrbClassic))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnlAddProduct.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, -1, -1));

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.CardLayout());

        appnlbuttons.setOpaque(false);

        apbtnClear.setBackground(new java.awt.Color(41, 57, 80));
        apbtnClear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        apbtnClear.setForeground(new java.awt.Color(255, 255, 255));
        apbtnClear.setText("Clear");
        apbtnClear.setPreferredSize(new java.awt.Dimension(171, 26));
        apbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apbtnClearActionPerformed(evt);
            }
        });

        apbtnAdd.setBackground(new java.awt.Color(41, 57, 80));
        apbtnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        apbtnAdd.setForeground(new java.awt.Color(255, 255, 255));
        apbtnAdd.setText("Add");
        apbtnAdd.setPreferredSize(new java.awt.Dimension(171, 26));
        apbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apbtnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout appnlbuttonsLayout = new javax.swing.GroupLayout(appnlbuttons);
        appnlbuttons.setLayout(appnlbuttonsLayout);
        appnlbuttonsLayout.setHorizontalGroup(
            appnlbuttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appnlbuttonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(apbtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(apbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        appnlbuttonsLayout.setVerticalGroup(
            appnlbuttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appnlbuttonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(appnlbuttonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apbtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(appnlbuttons, "card2");

        edpnlButtons.setOpaque(false);

        edbtnCancel.setBackground(new java.awt.Color(41, 57, 80));
        edbtnCancel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        edbtnCancel.setForeground(new java.awt.Color(255, 255, 255));
        edbtnCancel.setText("Cancel");
        edbtnCancel.setPreferredSize(new java.awt.Dimension(171, 26));
        edbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edbtnCancelActionPerformed(evt);
            }
        });

        edbtnSave.setBackground(new java.awt.Color(41, 57, 80));
        edbtnSave.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        edbtnSave.setForeground(new java.awt.Color(255, 255, 255));
        edbtnSave.setText("Save");
        edbtnSave.setPreferredSize(new java.awt.Dimension(171, 26));
        edbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edbtnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout edpnlButtonsLayout = new javax.swing.GroupLayout(edpnlButtons);
        edpnlButtons.setLayout(edpnlButtonsLayout);
        edpnlButtonsLayout.setHorizontalGroup(
            edpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(edpnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(edbtnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(edbtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        edpnlButtonsLayout.setVerticalGroup(
            edpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(edpnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(edpnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edbtnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edbtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.add(edpnlButtons, "card3");

        jpnlAddProduct.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 480, -1, -1));

        jpnlMain.add(jpnlAddProduct, "card3");

        jpnlProducts.setBackground(new java.awt.Color(255, 255, 255));
        jpnlProducts.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pdjtProductDetails.setAutoCreateRowSorter(true);
        pdjtProductDetails.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        pdjtProductDetails.setForeground(new java.awt.Color(23, 35, 51));
        pdjtProductDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MNo", "Name", "Size", "Manufacturer", "Price", "Range", "Colors", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pdjtProductDetails.setFocusable(false);
        pdjtProductDetails.setRowHeight(25);
        pdjtProductDetails.setSelectionBackground(new java.awt.Color(23, 35, 51));
        pdjtProductDetails.setSelectionForeground(new java.awt.Color(214, 255, 255));
        pdjtProductDetails.setShowHorizontalLines(false);
        pdjtProductDetails.setShowVerticalLines(false);
        pdjtProductDetails.getTableHeader().setResizingAllowed(false);
        pdjtProductDetails.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(pdjtProductDetails);
        if (pdjtProductDetails.getColumnModel().getColumnCount() > 0) {
            pdjtProductDetails.getColumnModel().getColumn(0).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(0).setPreferredWidth(35);
            pdjtProductDetails.getColumnModel().getColumn(1).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(1).setPreferredWidth(50);
            pdjtProductDetails.getColumnModel().getColumn(2).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(2).setPreferredWidth(100);
            pdjtProductDetails.getColumnModel().getColumn(3).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(3).setPreferredWidth(40);
            pdjtProductDetails.getColumnModel().getColumn(4).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(4).setPreferredWidth(100);
            pdjtProductDetails.getColumnModel().getColumn(5).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(5).setPreferredWidth(80);
            pdjtProductDetails.getColumnModel().getColumn(6).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(6).setPreferredWidth(80);
            pdjtProductDetails.getColumnModel().getColumn(7).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(7).setPreferredWidth(100);
            pdjtProductDetails.getColumnModel().getColumn(8).setResizable(false);
            pdjtProductDetails.getColumnModel().getColumn(8).setPreferredWidth(150);
        }
        pdjtProductDetails.getTableHeader().setBackground(new java.awt.Color(23,35,51));
        pdjtProductDetails.getTableHeader().setForeground(new java.awt.Color(214, 255, 255));
        pdjtProductDetails.getTableHeader().setFont(new java.awt.Font("Segoe UI", 1, 13));
        pdjtProductDetails.getTableHeader().setPreferredSize(new  java.awt.Dimension(20, 30));
        ((DefaultTableCellRenderer)pdjtProductDetails.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(javax.swing.JLabel.CENTER);

        jpnlProducts.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 122, 752, 380));

        pdjbDelete.setBackground(new java.awt.Color(41, 57, 80));
        pdjbDelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pdjbDelete.setForeground(new java.awt.Color(255, 255, 255));
        pdjbDelete.setText("Delete");
        pdjbDelete.setPreferredSize(new java.awt.Dimension(171, 26));
        pdjbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdjbDeleteActionPerformed(evt);
            }
        });
        jpnlProducts.add(pdjbDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(668, 520, 94, 40));

        pdjbEdit.setBackground(new java.awt.Color(41, 57, 80));
        pdjbEdit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pdjbEdit.setForeground(new java.awt.Color(255, 255, 255));
        pdjbEdit.setText("Edit");
        pdjbEdit.setPreferredSize(new java.awt.Dimension(171, 26));
        pdjbEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdjbEditActionPerformed(evt);
            }
        });
        jpnlProducts.add(pdjbEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(556, 520, 94, 40));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel15.setText("Product Details");
        jpnlProducts.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 26, -1, -1));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(213, 254, 254));
        jSeparator3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jSeparator3.setPreferredSize(new java.awt.Dimension(50, 100000));
        jpnlProducts.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, 138, 11));

        pdlblProductCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pdlblProductCount.setForeground(new java.awt.Color(23, 35, 51));
        pdlblProductCount.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pdlblProductCount.setText("0 items.");
        pdlblProductCount.setToolTipText("");
        jpnlProducts.add(pdlblProductCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 500, 537, -1));

        jpnlMain.add(jpnlProducts, "card2");

        jpnlSearch.setBackground(new java.awt.Color(255, 255, 255));
        jpnlSearch.setPreferredSize(new java.awt.Dimension(742, 500));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel19.setText("Product Search");

        jPanel2.setBackground(new java.awt.Color(242, 247, 246));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setOpaque(false);

        psbtnRange.setBackground(new java.awt.Color(41, 57, 80));
        psbtnRange.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        psbtnRange.setForeground(new java.awt.Color(255, 255, 255));
        psbtnRange.setText("Search by Range");
        psbtnRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psbtnRangeActionPerformed(evt);
            }
        });

        pscbLaptopRange.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        pscbLaptopRange.setForeground(new java.awt.Color(23, 35, 51));
        pscbLaptopRange.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--SELECT--", "Low", "Medium", "High" }));
        pscbLaptopRange.setOpaque(false);

        pslblValidateLaptopRange.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        pslblValidateLaptopRange.setForeground(new java.awt.Color(255, 0, 0));
        pslblValidateLaptopRange.setText(" ");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pscbLaptopRange, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pslblValidateLaptopRange, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(psbtnRange, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(pscbLaptopRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(pslblValidateLaptopRange)
                .addGap(7, 7, 7)
                .addComponent(psbtnRange, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setOpaque(false);

        psbtnCategory.setBackground(new java.awt.Color(41, 57, 80));
        psbtnCategory.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        psbtnCategory.setForeground(new java.awt.Color(255, 255, 255));
        psbtnCategory.setText("Search by Category");
        psbtnCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psbtnCategoryActionPerformed(evt);
            }
        });

        pscbLaptopCategory.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        pscbLaptopCategory.setForeground(new java.awt.Color(23, 35, 51));
        pscbLaptopCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--SELECT--", "Notebook", "Ultrabook", "Chromebook", "Macbook", "Convertible", "Classic" }));
        pscbLaptopCategory.setOpaque(false);

        pslblValidateLaptopCategory.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        pslblValidateLaptopCategory.setForeground(new java.awt.Color(255, 0, 0));
        pslblValidateLaptopCategory.setText(" ");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pscbLaptopCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(psbtnCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pslblValidateLaptopCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pscbLaptopCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pslblValidateLaptopCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(psbtnCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setOpaque(false);
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        psbtnPrice.setBackground(new java.awt.Color(41, 57, 80));
        psbtnPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        psbtnPrice.setForeground(new java.awt.Color(255, 255, 255));
        psbtnPrice.setText("Search by Price");
        psbtnPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psbtnPriceActionPerformed(evt);
            }
        });
        jPanel12.add(psbtnPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 74, -1, 35));

        pslblValidateLaptopPrice.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        pslblValidateLaptopPrice.setForeground(new java.awt.Color(255, 0, 0));
        pslblValidateLaptopPrice.setText(" ");
        jPanel12.add(pslblValidateLaptopPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 163, -1));

        psspLaptopPrice.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        psspLaptopPrice.setModel(new javax.swing.SpinnerNumberModel(0, null, null, 100));
        psspLaptopPrice.setEditor(new javax.swing.JSpinner.NumberEditor(psspLaptopPrice, "0"));
        psspLaptopPrice.setPreferredSize(new java.awt.Dimension(32, 25));
        jPanel12.add(psspLaptopPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 18, 163, 30));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(213, 254, 254));
        jSeparator5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jSeparator5.setPreferredSize(new java.awt.Dimension(50, 100000));

        pslblProductFound.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        pslblProductFound.setForeground(new java.awt.Color(23, 35, 51));
        pslblProductFound.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pslblProductFound.setText(" ");
        pslblProductFound.setToolTipText("");

        psjtProductSearch.setAutoCreateRowSorter(true);
        psjtProductSearch.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        psjtProductSearch.setForeground(new java.awt.Color(23, 35, 51));
        psjtProductSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MNo", "Name", "Size", "Manufacturer", "Price", "Range", "Colors", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        psjtProductSearch.setFocusable(false);
        psjtProductSearch.setRowHeight(25);
        psjtProductSearch.setRowSelectionAllowed(false);
        psjtProductSearch.setSelectionBackground(new java.awt.Color(23, 35, 51));
        psjtProductSearch.setSelectionForeground(new java.awt.Color(214, 255, 255));
        psjtProductSearch.setShowHorizontalLines(false);
        psjtProductSearch.setShowVerticalLines(false);
        psjtProductSearch.getTableHeader().setResizingAllowed(false);
        psjtProductSearch.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(psjtProductSearch);
        if (psjtProductSearch.getColumnModel().getColumnCount() > 0) {
            psjtProductSearch.getColumnModel().getColumn(0).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(0).setPreferredWidth(30);
            psjtProductSearch.getColumnModel().getColumn(1).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(1).setPreferredWidth(50);
            psjtProductSearch.getColumnModel().getColumn(2).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(2).setPreferredWidth(100);
            psjtProductSearch.getColumnModel().getColumn(3).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(3).setPreferredWidth(40);
            psjtProductSearch.getColumnModel().getColumn(4).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(4).setPreferredWidth(100);
            psjtProductSearch.getColumnModel().getColumn(5).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(5).setPreferredWidth(80);
            psjtProductSearch.getColumnModel().getColumn(6).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(6).setPreferredWidth(80);
            psjtProductSearch.getColumnModel().getColumn(7).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(7).setPreferredWidth(100);
            psjtProductSearch.getColumnModel().getColumn(8).setResizable(false);
            psjtProductSearch.getColumnModel().getColumn(8).setPreferredWidth(150);
        }
        psjtProductSearch.getTableHeader().setBackground(new java.awt.Color(23,35,51));
        psjtProductSearch.getTableHeader().setForeground(new java.awt.Color(214, 255, 255));
        psjtProductSearch.getTableHeader().setFont(new java.awt.Font("Segoe UI", 1, 13));
        psjtProductSearch.getTableHeader().setPreferredSize(new  java.awt.Dimension(20, 25));
        ((DefaultTableCellRenderer)psjtProductSearch.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(javax.swing.JLabel.CENTER);

        javax.swing.GroupLayout jpnlSearchLayout = new javax.swing.GroupLayout(jpnlSearch);
        jpnlSearch.setLayout(jpnlSearchLayout);
        jpnlSearchLayout.setHorizontalGroup(
            jpnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpnlSearchLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane4))
                    .addComponent(jLabel19)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pslblProductFound, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jpnlSearchLayout.setVerticalGroup(
            jpnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlSearchLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel19)
                .addGap(6, 6, 6)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(pslblProductFound)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jpnlMain.add(jpnlSearch, "card4");

        javax.swing.GroupLayout jpnlBgLayout = new javax.swing.GroupLayout(jpnlBg);
        jpnlBg.setLayout(jpnlBgLayout);
        jpnlBgLayout.setHorizontalGroup(
            jpnlBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlBgLayout.createSequentialGroup()
                .addComponent(jpnlSideBar, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jpnlBgLayout.setVerticalGroup(
            jpnlBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlSideBar, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
            .addComponent(jpnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
        );

        menuBar1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        menuFile.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        menuFile.setLabel("File");
        menuFile.setName("");

        mitemOpen.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mitemOpen.setLabel("Open");
        mitemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemOpenActionPerformed(evt);
            }
        });
        menuFile.add(mitemOpen);

        mitemSave.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mitemSave.setLabel("Save");
        mitemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemSaveActionPerformed(evt);
            }
        });
        menuFile.add(mitemSave);

        mitemSaveAs.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mitemSaveAs.setLabel("Save As..");
        mitemSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitemSaveAsActionPerformed(evt);
            }
        });
        menuFile.add(mitemSaveAs);

        mItemExit.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mItemExit.setLabel("Exit");
        mItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemExitActionPerformed(evt);
            }
        });
        menuFile.add(mItemExit);

        menuBar1.add(menuFile);

        menuView.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        menuView.setLabel("View");

        mItemAddProduct.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mItemAddProduct.setLabel("Add Product");
        mItemAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemAddProductActionPerformed(evt);
            }
        });
        menuView.add(mItemAddProduct);

        mItemProducts.setActionCommand("menu");
        mItemProducts.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mItemProducts.setLabel("Product Details");
        mItemProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemProductsActionPerformed(evt);
            }
        });
        menuView.add(mItemProducts);

        mItemSearch.setActionCommand("menu");
        mItemSearch.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mItemSearch.setLabel("Search Products");
        mItemSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemSearchActionPerformed(evt);
            }
        });
        menuView.add(mItemSearch);

        menuBar1.add(menuView);

        menuHelp.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        menuHelp.setLabel("Help");

        mItemAbout.setActionCommand("menu");
        mItemAbout.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        mItemAbout.setLabel("About");
        mItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemAboutActionPerformed(evt);
            }
        });
        menuHelp.add(mItemAbout);

        menuBar1.add(menuHelp);

        setMenuBar(menuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlBg, javax.swing.GroupLayout.PREFERRED_SIZE, 1015, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnlBg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        
        saveBeforeClose();
    }//GEN-LAST:event_exitForm

    /*
    Save Current progress before exiting the system
    */
    private void saveBeforeClose(){
        int x = 1;
        if (!this.fileSaved){
            x = JOptionPane.showConfirmDialog(this, "Current Progress not saved. Save? ", "Confirm", JOptionPane.YES_NO_OPTION);
        }
        
        if  (x==0){
            if (this.csvOpened){
                saveCsv();
            }else{
                saveAsCsv();
            }
        }
        System.exit(0);
    }
    
    /*
    Menu bar Open
    */
    private void mitemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitemOpenActionPerformed
        int x = 1;
        if (!this.fileSaved){
            x = JOptionPane.showConfirmDialog(this, "Current Progress not saved. Save? ", "Confirm", JOptionPane.YES_NO_OPTION);
        }
        
        if  (x==0){
            if (this.csvOpened){
                saveCsv();
            }else{
                saveAsCsv();
            }
        }else{
            openCsv();
        }
    }//GEN-LAST:event_mitemOpenActionPerformed
   
        //Open a CSV FILE  and import data to jTABLE
        private void openCsv(){
            JFileChooser jfFile = new JFileChooser();
                int response = jfFile.showOpenDialog(null);

                if (response== JFileChooser.APPROVE_OPTION){
                    File file = new File(jfFile.getSelectedFile().getAbsolutePath());
    
                    this.selectedPath = file.toString();
                    csvToTable();
                    this.csvOpened = true;
            }
        }
        
    /*
    Menu bar Exit
    */
    private void mItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemExitActionPerformed
         saveBeforeClose();
    }//GEN-LAST:event_mItemExitActionPerformed

    /*
    Change Page Navigation Bar Buttons.
    */
    private void navMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navMouseClicked
        if (evt.getSource() == jpnlAddProductNav){
            setAddProductActive();
        }
        else if(evt.getSource()== jpnlProductsNav){
           setProductsActive();
        }
        else if (evt.getSource() == jpnlSearchNav){
            setSearchActive();
        }
    }//GEN-LAST:event_navMouseClicked
    
    
    /*
    Change to Add Products Page
    */
    private void setAddProductActive(){
        if (!ActivePage.equals("AddProduct") ){
            sortById();
            clearForm();
            clearFormValidation();
            updateLaptopId();
            
            aplblTitle.setText("Add Product");
            
            appnlbuttons.setVisible(true);
            edpnlButtons.setVisible(false);
            
        
            activePanel(jpnlAddProduct);
            
            activeNavButton(jpnlAddProductNav, jpnlAddProductNavActive);
            deactiveNavButton (jpnlProductsNav, jpnlProductsNavActive);
            deactiveNavButton(jpnlSearchNav, jpnlSearchNavActive);
            
            ActivePage = "AddProduct";
        }
    }
    
    /*
    Change to  Product Page
    */
    private void setProductsActive(){
        if (!ActivePage.equals("Products")){
            activePanel(jpnlProducts);
            
            activeNavButton (jpnlProductsNav, jpnlProductsNavActive); 
            deactiveNavButton(jpnlAddProductNav, jpnlAddProductNavActive);
            deactiveNavButton (jpnlSearchNav, jpnlSearchNavActive);
            ActivePage = "Products";
        }
    }
    
    /*
    Change to  Search Page
    */
    private void setSearchActive(){
            if (!ActivePage.equals("Search")){
                activePanel(jpnlSearch);

                activeNavButton (jpnlSearchNav, jpnlSearchNavActive);
                deactiveNavButton(jpnlAddProductNav, jpnlAddProductNavActive);
                deactiveNavButton (jpnlProductsNav, jpnlProductsNavActive);
                ActivePage = "Search"; 
            }
        }
    
    /*
    Convert Add Product Page to Edit Product Page and Set Active
    */
    private void setEditActive(){
        aplblTitle.setText("Edit Product");
        
        edpnlButtons.setVisible(true);
        appnlbuttons.setVisible(false);
        clearFormValidation();
        clearForm();
        activePanel(jpnlAddProduct);
        ActivePage = "Edit"; 
    }
    
    //Activate a page
    private void activePanel(JPanel aPanel){
        JPanel[] allPanels = {
            jpnlAddProduct, jpnlProducts, jpnlSearch
        };
        for(JPanel panel: allPanels){
            panel.setVisible(false);
        }
        aPanel.setVisible(true);
    }

    //Activate a  Navigation button
    private void activeNavButton(JPanel panel, JPanel active){
        panel.setBackground(new Color(41,57,80));
        active.setBackground(new Color(214, 255, 255));
    }
        
    //Deactivate a Navigation button
    private void deactiveNavButton(JPanel panel, JPanel active){
        panel.setBackground(new Color(23,35,51));
        active.setBackground(new Color(23,35,51));
    }
    
    //MenuBar View Goto Product Page
    private void mItemProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemProductsActionPerformed
       setProductsActive();
    }//GEN-LAST:event_mItemProductsActionPerformed

    //MenuBar  View Goto Add Products Page
    private void mItemAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemAddProductActionPerformed
        setAddProductActive();
    }//GEN-LAST:event_mItemAddProductActionPerformed

    //MenuBar   View Goto Search Page
    private void mItemSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemSearchActionPerformed
        setSearchActive();
    }//GEN-LAST:event_mItemSearchActionPerformed

   
    //Clear Form Validation
    private void clearFormValidation(){
        aplblValidateLaptopModel.setText(" ");
        aplblValidateLaptopName.setText(" ");
        aplblValidateLaptopSize.setText(" ");
        aplblValidateLaptopManufacturer.setText(" ");
        aplblValidateLaptopPrice.setText(" ");
        aplblValidateLaptopColor.setText(" ");
        aplblValidateLaptopCategory.setText(" ");
        
    }

    //Clear Form 
    private void clearForm(){
        aptfLaptopModel.setText(null);
        aptfLaptopName.setText(null);
        apcbLaptopSize.setSelectedIndex(0);
        apcbLaptopManufacturer.setSelectedIndex(0);
        apspLaptopPrice.setValue(0);
        apsdLaptopRange .setValue(0);
        apbtngrpCategory.clearSelection();

        javax.swing.JCheckBox[] js = {
            jcColorBlue, jcColorBlack, jcColorGrey, jcColorWhite, jcColorRed
        };
        for (javax.swing.JCheckBox jcb: js){
            jcb.setSelected(false);
        }
    }
    
    //Product EDIT
    private void pdjbEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdjbEditActionPerformed

            this.toEditRow = pdjtProductDetails.getSelectedRow();

                if (toEditRow<0){
                    return;
                }
                
                setEditActive();

                ArrayList<Object> data = new ArrayList<>();
                for (int i = 0; i<9; i++){
                    data.add(pdjtProductDetails.getModel().getValueAt(toEditRow, i));
                }

                

                aplblLaptopNumber.setText(Integer.toString((int) data.get(0)));
                aptfLaptopModel.setText((String) data.get(1));
                aptfLaptopName.setText((String) data.get(2));
                apcbLaptopSize.setSelectedItem((String) data.get(3));
                apcbLaptopManufacturer.setSelectedItem((String) data.get(4));
                apspLaptopPrice.setValue((Integer) data.get(5));

                Hashtable <String, Integer> range = new Hashtable<>();
                range.put("Low",0);
                range.put("Medium", 1);
                range.put("High",2);
                apsdLaptopRange .setValue(range.get((String) data.get(6)));
                updateSliderText();

                Hashtable<String, javax.swing.JRadioButton> category = new Hashtable<>();
                category.put("Notebook", jrbNotebook);
                category.put("Chromebook", jrbChromebook);
                category.put("Convertible", jrbConvertible);
                category.put("Classic", jrbClassic);
                category.put("Macbook", jrbMacbook);
                category.put("Ultrabook", jrbUltrabook);
                category.get((String) data.get(8)).setSelected(true);

                Hashtable <String, javax.swing.JCheckBox> colors = new Hashtable<>();
                colors.put("Blue", jcColorBlue);
                colors.put("Black", jcColorBlack);
                colors.put("Grey", jcColorGrey);
                colors.put("White", jcColorWhite);
                colors.put("Red", jcColorRed);

                String[] choiceColors = ((String) data.get(7)).split(";");

                for (String color: choiceColors){
                    colors.get(color).setSelected(true);
                }    
    }//GEN-LAST:event_pdjbEditActionPerformed
    
    //Update Product Count
     private void updateProductCount(){
         
        pdlblProductCount.setText(String.valueOf(getProductCount()) + " items.");
    }
    
    //Get Product Count
    private int getProductCount(){
        
        return  pdjtProductDetails.getRowCount();
    }
    
    //Get Last Laptop ID
    private int getLaptopId(){

            int id=101;
            if (pdjtProductDetails.getRowCount()>0){
                id = ((Integer) pdjtProductDetails.getValueAt(pdjtProductDetails.getRowCount()-1,0))+1;
            }
            return id;
    }
    
    //Update Add Products Laptop Number
    private void updateLaptopId(){
        
        aplblLaptopNumber.setText(Integer.toString(getLaptopId()));
    }
    
    //DELETE row FROM JTABLE
    private void pdjbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdjbDeleteActionPerformed

        int row = pdjtProductDetails.getSelectedRow();
            
            //IF not row is Selected
            if (row<0){
                return;
            }
            String laptopName = (String) pdjtProductDetails.getValueAt(row, 2);
            int x = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete laptop: "+laptopName+"?", "Confirm!", JOptionPane.YES_NO_OPTION);
            if (x==0){
                DefaultTableModel model = (DefaultTableModel) pdjtProductDetails.getModel();
                model.removeRow(row);
                updateProductCount();
                JOptionPane.showMessageDialog(this,"Laptop: "+laptopName+" has been deleted.","Message",JOptionPane.INFORMATION_MESSAGE);
                
                if (model.getRowCount() >0 ){
                    fileSaved = false;
                }
            }
    }//GEN-LAST:event_pdjbDeleteActionPerformed

    
    
    //Add Products  Clear Button  action peroformed
    private void apbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apbtnClearActionPerformed
        clearFormValidation();
        clearForm();
    }//GEN-LAST:event_apbtnClearActionPerformed



    //Update Slider Text Value when State Changed
    private void apsdLaptopRangeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_apsdLaptopRangeStateChanged
       updateSliderText();
    }//GEN-LAST:event_apsdLaptopRangeStateChanged

    //Update Slider Text Value
    private void updateSliderText(){
        Hashtable<Integer, String> ht = new Hashtable<>();
        ht.put(0, "Low");
        ht.put(1, "Medium");
        ht.put(2, "High");

        aptfRange.setText(ht.get(apsdLaptopRange.getValue()));
    }
    
    /*
    Validate Form
    */
    private boolean validateForm(){
        
        if (getLaptopModel().equals("")){
            aplblValidateLaptopModel.setText("*Enter Model Number");
            JOptionPane.showMessageDialog(this,"Please enter Laptop Model.","Message",JOptionPane.INFORMATION_MESSAGE);
            aptfLaptopModel.grabFocus();
            return false;
        }
        
        if (getLaptopName().equals("")){
            aplblValidateLaptopName.setText("*Enter Laptop Name");
            JOptionPane.showMessageDialog(this,"Please enter Laptop Name.","Message",JOptionPane.INFORMATION_MESSAGE);
            aptfLaptopName.grabFocus();
            return false;
        }
        
        
        if (getLaptopSize().equals( "--SELECT--")){
            aplblValidateLaptopSize.setText("*Select a Size");
            JOptionPane.showMessageDialog(this,"Please Select Laptop's Size.","Message",JOptionPane.INFORMATION_MESSAGE);
            apcbLaptopSize.grabFocus();
            return false;
        }
        
        if (getLaptopManufacturer().equals( "--SELECT--")){
             aplblValidateLaptopManufacturer.setText("*Select a Manufacturer");
            JOptionPane.showMessageDialog(this,"Please Select Laptop's Manufacturer.","Message",JOptionPane.INFORMATION_MESSAGE);
            apcbLaptopManufacturer.grabFocus();
            return false;
        }
        
        if (getLaptopPrice() < 1){
            aplblValidateLaptopPrice.setText("*Enter Price");
            JOptionPane.showMessageDialog(this,"Please Enter valid price.","Message",JOptionPane.INFORMATION_MESSAGE);
            apspLaptopPrice.grabFocus();
            return false;
        }
        
        if (getLaptopColors().isEmpty()){
            aplblValidateLaptopColor.setText("*Select Available Colors");
            JOptionPane.showMessageDialog(this,"Please Select Laptop's available colors.","Message",JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        
        try{
            getLaptopCategory();
        }catch (NullPointerException e){
            aplblValidateLaptopCategory.setText("*Select a Category");
            JOptionPane.showMessageDialog(this,"Please Select a Category.","Message",JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        
        //Check Dublicate Product Entry
        String colors = String.join(";", getLaptopColors());
        Object[] dub =  {getLaptopModel(), getLaptopName(), getLaptopSize(), getLaptopManufacturer(), getLaptopPrice(), getLaptopRange(), colors, getLaptopCategory()};
        
        
        if (dublicateProduct(dub)){
            JOptionPane.showMessageDialog(this,"Laptop has already been added.","Error!",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
  
    /*
    Add product ADD button action performed
    */
    private void apbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apbtnAddActionPerformed
        clearFormValidation();
        
        //Form Validation
        if (!validateForm()){
            return;
        }
        
        String colors = String.join(";", getLaptopColors());

        Object[] data = {getLaptopId(),getLaptopModel(), getLaptopName(), getLaptopSize(), getLaptopManufacturer(), getLaptopPrice(), getLaptopRange(), colors, getLaptopCategory()};
        
        
        DefaultTableModel model = (DefaultTableModel) pdjtProductDetails.getModel();
        
        model.addRow(data);
        
        updateProductCount();
        
        JOptionPane.showMessageDialog(this,"Laptop has sucessfully been added.","Sucess!",JOptionPane.INFORMATION_MESSAGE);
        
        updateLaptopId();
        
        this.fileSaved = false;
        
    }//GEN-LAST:event_apbtnAddActionPerformed
    
    /*
    Method to check whether a product has already been added.
    */
    private boolean dublicateProduct(Object[] data){
        
        DefaultTableModel model = (DefaultTableModel) pdjtProductDetails.getModel();
        boolean dublicate = false;
        
        for (int i=0; i<model.getRowCount();i++){
            Object[] row = new Object[8];
            for (int j=1; j<model.getColumnCount();j++){
                row[j-1] = model.getValueAt(i, j);
            }
            
            if (Arrays.equals(data, row)){
                dublicate = true;
                break;
            }
        }
        return dublicate; 
    }
    
    /*
    Edit Product Cancel Button action performed
    */
    private void edbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edbtnCancelActionPerformed
        
        clearForm();
        clearFormValidation();
        setProductsActive();
    }//GEN-LAST:event_edbtnCancelActionPerformed

    /*
    Edit Product Save button action performed
    */
    private void edbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edbtnSaveActionPerformed
        clearFormValidation();
        if (!validateForm()){
            return;
        }
        
        DefaultTableModel model = ((DefaultTableModel) pdjtProductDetails.getModel());
        
        String colors = String.join(";", getLaptopColors());
        
        model.setValueAt(getLaptopModel(), this.toEditRow, 1);
        model.setValueAt(getLaptopName(), this.toEditRow, 2);
        model.setValueAt(getLaptopSize(), this.toEditRow, 3);
        model.setValueAt(getLaptopManufacturer(), this.toEditRow, 4);
        model.setValueAt(getLaptopPrice(), this.toEditRow, 5);
        model.setValueAt(getLaptopRange(), this.toEditRow, 6);
        model.setValueAt(colors, this.toEditRow, 7);
        model.setValueAt(getLaptopCategory(), this.toEditRow, 8);
        
        
        JOptionPane.showMessageDialog(this,"Laptop details has been updated.","Sucess!",JOptionPane.INFORMATION_MESSAGE);
        
        clearForm();
        clearFormValidation();
        setProductsActive();
    }//GEN-LAST:event_edbtnSaveActionPerformed
    
    /*
    Method to clear validation message from Search Product page
    */
    private void clearSearchValidation(){
        
        pslblValidateLaptopPrice.setText(" ");
        pslblValidateLaptopRange.setText(" ");
        pslblValidateLaptopCategory.setText(" ");
    }
    
    /*
    GET  Price from Search Panel
    */
    public int getSearchLaptopPrice(){
        return (int) psspLaptopPrice.getValue();
    }
    
    /*
    GET  Range from Search Panel
    */
    public String getSearchLaptopRange(){
        return (String) pscbLaptopRange.getSelectedItem().toString();
    }
     /*
    GET  Category from Search Panel
    */
    public String getSearchLaptopCategory(){
        return (String) pscbLaptopCategory.getSelectedItem().toString();
    }
    
    
    /*
    Save button
    Menu bar File Save menuitem on click action performed
    */
    private void mitemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitemSaveActionPerformed
            if (!this.csvOpened){
                if(!this.fileSaved)
                saveAsCsv();
            }else{
                saveCsv();
            }
    }//GEN-LAST:event_mitemSaveActionPerformed

    /*
    Save as File
    Menu bar File Save As menuitem on click action performed
    */
    private void mitemSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitemSaveAsActionPerformed
        saveAsCsv();
    }//GEN-LAST:event_mitemSaveAsActionPerformed

     /*
    Product Found Count
    Method to display the total product found from a Search Query.
    */
    private void updateProductFound(){
        DefaultTableModel tableSearch = (DefaultTableModel) psjtProductSearch.getModel();
        pslblProductFound.setText(tableSearch.getRowCount()+ " items found.");
    }
    
    /*
    Search by Price
    Method to display items that match the specified price
    */
    private void psbtnPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psbtnPriceActionPerformed
        
        clearSearchValidation();
        pscbLaptopRange.setSelectedIndex(0);
        pscbLaptopCategory.setSelectedIndex(0);
        
        if (getSearchLaptopPrice() <1){
            pslblValidateLaptopPrice.setText("*Enter Price");
            JOptionPane.showMessageDialog(this,"Please Enter valid price.","Message",JOptionPane.INFORMATION_MESSAGE);
            pslblValidateLaptopPrice.grabFocus();
            return;
        }
        
        sortByPrice();

        DefaultTableModel tableDetails = (DefaultTableModel) pdjtProductDetails.getModel();
        DefaultTableModel tableSearch = (DefaultTableModel) psjtProductSearch.getModel();
        
        tableSearch.setRowCount(0);
        
        int inputPrice = getSearchLaptopPrice();
        
        int[] prices = new int[tableDetails.getRowCount()];
        
        for(int i=0;i<tableDetails.getRowCount();i++){
            int value = (int) tableDetails.getValueAt(i,5);
            prices[i] = value;
        }
        
        int index = BinarySearch.search(prices, inputPrice);
        
        if (index==-1){
            updateProductFound();
             JOptionPane.showMessageDialog(this,"No Laptop is available at a price of "+inputPrice+".","Message",JOptionPane.INFORMATION_MESSAGE);
        }else{
        
            int actual = pdjtProductDetails.convertRowIndexToModel(index);

            Object[] data = new Object[9];

            for (int i=0;i<9;i++){
                data[i]=tableDetails.getValueAt(actual,i);
            }

            tableSearch.addRow(data);
            updateProductFound();
            String message = "Laptop "+tableSearch.getValueAt(0,2)+" ("+tableSearch.getValueAt(0,1)+ ") is available at a price of "+inputPrice+".";
            JOptionPane.showMessageDialog(this, message,"Message",JOptionPane.INFORMATION_MESSAGE);
            
            sortById();
        }
    }//GEN-LAST:event_psbtnPriceActionPerformed

    private void sortByPrice(){
        javax.swing.DefaultRowSorter sorter = ((javax.swing.DefaultRowSorter)pdjtProductDetails.getRowSorter()); 
        ArrayList list = new ArrayList();
        list.add( new javax.swing.RowSorter.SortKey(5, javax.swing.SortOrder.ASCENDING) );
        sorter.setSortKeys(list);
        sorter.sort();
    }
    
    private void sortById(){
        javax.swing.DefaultRowSorter sorter = ((javax.swing.DefaultRowSorter)pdjtProductDetails.getRowSorter()); 
        ArrayList list = new ArrayList();
        list.add( new javax.swing.RowSorter.SortKey(0, javax.swing.SortOrder.ASCENDING) );
        sorter.setSortKeys(list);
        sorter.sort();
    }
        /*
    Search by Range
    Method to display items that match the specified range
    */
    private void psbtnRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psbtnRangeActionPerformed
     
        clearSearchValidation();
        psspLaptopPrice.setValue(0);
        pscbLaptopCategory.setSelectedIndex(0);
        
        if (getSearchLaptopRange().equals("--SELECT--")){
            pslblValidateLaptopRange.setText("*Select a Price Range");
            JOptionPane.showMessageDialog(this,"Please Select Laptop's Price Range.","Message",JOptionPane.INFORMATION_MESSAGE);
            pslblValidateLaptopRange.grabFocus();
            return;
        }
        
        
         DefaultTableModel tableDetails = (DefaultTableModel) pdjtProductDetails.getModel();
         DefaultTableModel tableSearch = (DefaultTableModel) psjtProductSearch.getModel();
        
         tableSearch.setRowCount(0);
         ArrayList<String> range = new ArrayList<>();
         
         for (int i=0;i<tableDetails.getRowCount();i++){
             if (tableDetails.getValueAt(i,6).equals(   getSearchLaptopRange())){
                 Object[] data = new Object[9];
                 for (int j=0; j<tableDetails.getColumnCount();j++){
                     data[j] = tableDetails.getValueAt(i,j);   
                 }
                 range.add(range.size()+1+". "+(String) tableDetails.getValueAt(i,2)+" ("+(String) tableDetails.getValueAt(i,1)+")");
                 tableSearch.addRow(data);
             }
         }
         updateProductFound();
         
         int dataCount = range.size();
         if (dataCount<1){
             String message = "No items  found in "+pscbLaptopRange.getSelectedItem().toString().toLowerCase()+" range.";
             JOptionPane.showMessageDialog(this, message, "Message", JOptionPane.INFORMATION_MESSAGE);
         }else{
             String message = "There are "+dataCount+ " items in "+pscbLaptopRange.getSelectedItem().toString().toLowerCase() + " range:\n"+ String.join("\n",range);;
             JOptionPane.showMessageDialog(this, message, "Message", JOptionPane.INFORMATION_MESSAGE);
         }
    }//GEN-LAST:event_psbtnRangeActionPerformed
    

    
     /*
    Search by Category
    Method to display items that match the specified category
    */
    private void psbtnCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psbtnCategoryActionPerformed
        
        clearSearchValidation();
        psspLaptopPrice.setValue(0);
        pscbLaptopRange.setSelectedIndex(0);
        
        if (getSearchLaptopCategory().equals("--SELECT--")){
            pslblValidateLaptopCategory.setText("*Select a Category");
            JOptionPane.showMessageDialog(this,"Please Select Laptop's Category.","Message",JOptionPane.INFORMATION_MESSAGE);
            pslblValidateLaptopCategory.grabFocus();
            return;
        }
        
        
        
        DefaultTableModel tableDetails = (DefaultTableModel) pdjtProductDetails.getModel();
         DefaultTableModel tableSearch = (DefaultTableModel) psjtProductSearch.getModel();
        
         tableSearch.setRowCount(0);
         ArrayList<String> category = new ArrayList<>();
         
         for (int i=0;i<tableDetails.getRowCount();i++){
             if (tableDetails.getValueAt(i,8).equals(getSearchLaptopCategory())){
                 Object[] data = new Object[9];
                 for (int j=0; j<tableDetails.getColumnCount();j++){
                     data[j] = tableDetails.getValueAt(i,j);
                 }
                 category.add(category.size()+1+". "+(String) tableDetails.getValueAt(i,2)+" ("+(String) tableDetails.getValueAt(i,1)+")");
                 tableSearch.addRow(data);
             }
         }
         updateProductFound();        
         
         int dataCount = category.size();
         if (dataCount<=0){
             String message = "No "+pscbLaptopCategory.getSelectedItem().toString() +"s found.";
             JOptionPane.showMessageDialog(this, message, "Message", JOptionPane.INFORMATION_MESSAGE);
         }else{
             String message = "There are "+dataCount+ " "+pscbLaptopCategory.getSelectedItem().toString()+":\n"+ String.join("\n",category);
             JOptionPane.showMessageDialog(this, message, "Message", JOptionPane.INFORMATION_MESSAGE);
         }
    }//GEN-LAST:event_psbtnCategoryActionPerformed

    private void aptfLaptopNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aptfLaptopNameKeyPressed

        char key =  evt.getKeyChar();
        
        if(Character.isAlphabetic(key) || evt.getKeyCode() == java.awt.event.KeyEvent.VK_BACK_SPACE || evt.getKeyCode() == java.awt.event.KeyEvent.VK_SPACE || evt.getKeyCode() == java.awt.event.KeyEvent.VK_SHIFT){
            aptfLaptopName.setEditable(true);
        }else{
            aptfLaptopName.setEditable(false);
        }
    }//GEN-LAST:event_aptfLaptopNameKeyPressed

    /*
    Menu Item About
    Method to open user manuel for the system.
    */
    private void mItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemAboutActionPerformed
        
        try {
            File file =new File("src/laptop_is/file/userManuel.pdf");
            Desktop.getDesktop().open(file); 
        } catch (IOException | IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, "File not found");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "ERROR: "+ex);
        }
    }//GEN-LAST:event_mItemAboutActionPerformed
    
    
    //Menu Bar Save AS Button
    private void saveAsCsv(){
        JFileChooser jfFile = new JFileChooser();
        int response = jfFile.showSaveDialog(null);
        
        if (response== JFileChooser.APPROVE_OPTION){
            File file = new File(jfFile.getSelectedFile().getAbsolutePath());

            if(!String.valueOf(file).endsWith(".csv")){
                JOptionPane.showMessageDialog(this,"Invalid CSV file.","Error",JOptionPane.ERROR_MESSAGE);
            }else{
                this.csvPath = String.valueOf(file);
                saveCsv();
            }
        }
    }
    
    /*
    Save as new csv file
    */
    public void saveCsv(){
        
        DefaultTableModel model = (DefaultTableModel) pdjtProductDetails.getModel();
        if (model.getRowCount() <1 ){
            JOptionPane.showMessageDialog(this,"Please Add Product First.","Message",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        ArrayList<String[]> tableData = new ArrayList<>();
        String[] header = {"ID", "MODELNUMBER", "LAPTOPNAME", "SIZE", "MANUFACTURER", "PRICE", "RANGE", "AVAILABLECOLORS", "CATEGORY"};
        tableData.add(header);
        
        for(int i =0; i<model.getRowCount();i++){
            ArrayList<String> rowData = new ArrayList<>();
            for(int j =0; j<model.getColumnCount();j++){
                rowData.add(String.valueOf(model.getValueAt(i, j)));
            }
            tableData.add(rowData.toArray(new String[rowData.size()]));
        }
        
        try {
            CSVWriter writer = new CSVWriter(new FileWriter(this.csvPath),
                                                                        CSVWriter.DEFAULT_SEPARATOR,
                                                                        CSVWriter.NO_QUOTE_CHARACTER,
                                                                        CSVWriter.DEFAULT_ESCAPE_CHARACTER,
                                                                        CSVWriter.DEFAULT_LINE_END
                                                                        );
            writer.writeAll(tableData);
            writer.close();
        JOptionPane.showMessageDialog(this,"File Saved.","Sucess!!",JOptionPane.INFORMATION_MESSAGE);
        
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this,"Error: ."+e,"Error",JOptionPane.ERROR_MESSAGE);
        }
        this.fileSaved = true;
        this.csvOpened = true;
    }
    
    /*
    Method to verify whether the csv file is Legit
    */
    private boolean validateCsv(){
        try {
            
            if (!this.selectedPath.endsWith(".csv")){
                return false;
            } 
            
            CSVReader reader = new CSVReader(new FileReader(this.selectedPath));
            
            String[] fileHeader = reader.readNext();
            String[] actualHeader = {"ID", "MODELNUMBER", "LAPTOPNAME", "SIZE", "MANUFACTURER", "PRICE", "RANGE", "AVAILABLECOLORS", "CATEGORY"};
            
            return Arrays.equals(fileHeader, actualHeader);
            
        } catch (Exception e) {
            return false;
        }
    }
   
    
    /*
    Method to import data from CSV file to JTable
    */
    private void csvToTable(){
        if (!validateCsv()){
                JOptionPane.showMessageDialog(this,"Invalid CSV file.","Error",JOptionPane.ERROR_MESSAGE);
                return;
        }
        try {
             this.csvPath = this.selectedPath;
            
            String[] nextline;
            CSVReader reader = new CSVReader(new FileReader(this.csvPath));
            DefaultTableModel model = (DefaultTableModel) pdjtProductDetails.getModel();
            
            //Delete Existing Rows
            model.setRowCount(0);
            
            reader.readNext();
            int rowCount = 0;
            while((nextline = reader.readNext())!= null){
                if (nextline != null){
                    try{
                        Object[] data = {Integer.parseInt(nextline[0]), nextline[1], nextline[2], nextline[3], nextline[4], Integer.parseInt(nextline[5]), nextline[6], nextline[7],nextline[8]};
                        model.addRow(data);
                        rowCount++;
                    } catch(ArrayIndexOutOfBoundsException | NumberFormatException e){

                    }
                }
            }
            setProductsActive();
            updateProductCount();
            JOptionPane.showMessageDialog(this,rowCount+" Rows Imported. ","Message",JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            this.csvPath = "";
            
        }  catch(CsvValidationException | HeadlessException | IOException e){
            this.csvPath = "";
            JOptionPane.showMessageDialog(this,"ERROR: "+e,"Error",JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
            this.csvPath = "";
            JOptionPane.showMessageDialog(this,"Error while adding CSV data to Table\nERROR: "+e,"Error",JOptionPane.ERROR_MESSAGE);
        }
    }

    //GET Model Number
    public String getLaptopModel(){
        return aptfLaptopModel.getText().trim();
    }
    
    //GET Laptop Name
    public String getLaptopName(){
        return aptfLaptopName.getText().trim();
    }
    
    //GET Laptop Size
    public String getLaptopSize(){
        return apcbLaptopSize.getSelectedItem().toString();
    }
    
    //GET Laptop Manufacturer
    public String getLaptopManufacturer(){
        return apcbLaptopManufacturer.getSelectedItem().toString();
    }
    
    //GET Laptop Price
    public int getLaptopPrice(){
        return  (int) apspLaptopPrice.getValue();
    }
    
    //GET Laptop Range
    public String getLaptopRange(){
        int range =  (Integer) apsdLaptopRange.getValue();
        var ht = new Hashtable<Integer, String>();
        ht.put(0, "Low");
        ht.put(1, "Medium");
        ht.put(2, "High");
        
        return ht.get(range);
    }
    
    //GET  Laptop Colors
    public ArrayList getLaptopColors(){
        var ht = new Hashtable <javax.swing.JCheckBox, String>();
        ht.put(jcColorBlue,  "Blue"); 
        ht.put(jcColorBlack,  "Black"); 
        ht.put(jcColorGrey, "Grey"); 
        ht.put(jcColorWhite, "White"); 
        ht.put(jcColorRed,  "Red"); 
        
        ArrayList<String> colors = new ArrayList<>();
        
        for (javax.swing.JCheckBox jc : ht.keySet()){
            if (jc.isSelected()){
                colors.add(ht.get(jc));
            }
        }
        
        return colors;
    }
    
    //GET Laptop Category
    public String getLaptopCategory(){
        return apbtngrpCategory.getSelection().getActionCommand();
    }
        
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LaptopInfo().setVisible(true);
            }
        });        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apbtnAdd;
    private javax.swing.JButton apbtnClear;
    private javax.swing.ButtonGroup apbtngrpCategory;
    private javax.swing.JComboBox<String> apcbLaptopManufacturer;
    private javax.swing.JComboBox<String> apcbLaptopSize;
    private javax.swing.JLabel aplblLaptopNumber;
    private javax.swing.JLabel aplblTitle;
    private javax.swing.JLabel aplblValidateLaptopCategory;
    private javax.swing.JLabel aplblValidateLaptopColor;
    private javax.swing.JLabel aplblValidateLaptopManufacturer;
    private javax.swing.JLabel aplblValidateLaptopModel;
    private javax.swing.JLabel aplblValidateLaptopName;
    private javax.swing.JLabel aplblValidateLaptopPrice;
    private javax.swing.JLabel aplblValidateLaptopSize;
    private javax.swing.JPanel appnlbuttons;
    private javax.swing.JSlider apsdLaptopRange;
    private javax.swing.JSpinner apspLaptopPrice;
    private javax.swing.JTextField aptfLaptopModel;
    private javax.swing.JTextField aptfLaptopName;
    private javax.swing.JLabel aptfRange;
    private javax.swing.JButton edbtnCancel;
    private javax.swing.JButton edbtnSave;
    private javax.swing.JPanel edpnlButtons;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JCheckBox jcColorBlack;
    private javax.swing.JCheckBox jcColorBlue;
    private javax.swing.JCheckBox jcColorGrey;
    private javax.swing.JCheckBox jcColorRed;
    private javax.swing.JCheckBox jcColorWhite;
    private javax.swing.JPanel jpnlAddProduct;
    private javax.swing.JPanel jpnlAddProductNav;
    private javax.swing.JPanel jpnlAddProductNavActive;
    private javax.swing.JPanel jpnlBg;
    private javax.swing.JPanel jpnlMain;
    private javax.swing.JPanel jpnlProducts;
    private javax.swing.JPanel jpnlProductsNav;
    private javax.swing.JPanel jpnlProductsNavActive;
    private javax.swing.JPanel jpnlSearch;
    private javax.swing.JPanel jpnlSearchNav;
    private javax.swing.JPanel jpnlSearchNavActive;
    private javax.swing.JPanel jpnlSideBar;
    private javax.swing.JRadioButton jrbChromebook;
    private javax.swing.JRadioButton jrbClassic;
    private javax.swing.JRadioButton jrbConvertible;
    private javax.swing.JRadioButton jrbMacbook;
    private javax.swing.JRadioButton jrbNotebook;
    private javax.swing.JRadioButton jrbUltrabook;
    private java.awt.MenuItem mItemAbout;
    private java.awt.MenuItem mItemAddProduct;
    private java.awt.MenuItem mItemExit;
    private java.awt.MenuItem mItemProducts;
    private java.awt.MenuItem mItemSearch;
    private java.awt.MenuBar menuBar1;
    private java.awt.Menu menuFile;
    private java.awt.Menu menuHelp;
    private java.awt.Menu menuView;
    private java.awt.MenuItem mitemOpen;
    private java.awt.MenuItem mitemSave;
    private java.awt.MenuItem mitemSaveAs;
    private javax.swing.JButton pdjbDelete;
    private javax.swing.JButton pdjbEdit;
    private javax.swing.JTable pdjtProductDetails;
    private javax.swing.JLabel pdlblProductCount;
    private javax.swing.JButton psbtnCategory;
    private javax.swing.JButton psbtnPrice;
    private javax.swing.JButton psbtnRange;
    private javax.swing.JComboBox<String> pscbLaptopCategory;
    private javax.swing.JComboBox<String> pscbLaptopRange;
    private javax.swing.JTable psjtProductSearch;
    private javax.swing.JLabel pslblProductFound;
    private javax.swing.JLabel pslblValidateLaptopCategory;
    private javax.swing.JLabel pslblValidateLaptopPrice;
    private javax.swing.JLabel pslblValidateLaptopRange;
    private javax.swing.JSpinner psspLaptopPrice;
    // End of variables declaration//GEN-END:variables
}
